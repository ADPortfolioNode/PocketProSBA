# render.yaml
#
# This file defines the infrastructure for deploying the PocketPro:SBA application
# on Render.com. It has been consolidated from multiple versions to create a single,
# stable, and production-ready configuration.

services:
  # --------------------------------------------------
  # 1. ChromaDB Service (Dependency)
  # --------------------------------------------------
  # This service is defined before the main app because the app depends on it.
  - type: web
    name: chromadb
    runtime: docker
    image:
      url: chromadb/chroma:0.5.0
    plan: standard
    region: oregon
    healthCheckPath: /api/v1/heartbeat
    envVars:
      - key: CHROMA_SERVER_HOST
        value: 0.0.0.0

  # --------------------------------------------------
  # 2. Redis Service (Dependency for Scaling)
  # --------------------------------------------------
  # A Redis instance is critical for session management and caching.
  - type: redis
    name: redis
    plan: standard
    region: oregon
    maxmemoryPolicy: allkeys-lru

  # --------------------------------------------------
  # 3. Backend API Service (Dependent)
  # --------------------------------------------------
  # This service builds from a Dockerfile and serves both the API and frontend.
  - type: web
    name: pocketpro-sba-app
    plan: standard
    numInstances: 1
    region: oregon
    runtime: docker
    dockerfilePath: ./Dockerfile.render.full
    autoDeploy: true
    healthCheckPath: /health
    envVars:
      - key: FLASK_ENV
        value: production
      - key: FLASK_APP
        value: app_full.py
      - key: PYTHONDONTWRITEBYTECODE
        value: "1"
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: LOG_LEVEL
        value: INFO
      - key: RAG_SYSTEM_ENABLED
        value: "true"
      - key: UPLOAD_FOLDER
        value: /app/uploads
      - key: REDIS_URL
        fromService:
          type: redis
          name: redis
          property: connectionString
      - key: CHROMA_HOST
        fromService:
          type: web
          name: chromadb
          property: host
      - key: CHROMA_PORT
        fromService:
          type: web
          name: chromadb
          property: port
      - key: GEMINI_API_KEY
        sync: false
      - key: SECRET_KEY
        generateValue: true
